name: Ollama Gemini Test

on:
  push:
    branches:
      - main
  pull_request:

env:
  OLLAMA_MODEL_TO_TEST: 'gemma3:12b'
  # Docker volume path (can be adjusted if needed)
  OLLAMA_VOLUME_PATH: ollama_data

jobs:
  ollama-test:
    # Use ubuntu-latest for more RAM and reliable Docker support
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Setup Gradle
        uses: gradle/gradle-build-action@a8f75513eafdebd8141bd1cd4e30fcd194af8dfa # v2.12.0
        with:
          gradle-version: wrapper

      # Cache for Docker volume data
      - name: Restore Ollama Docker volume cache
        id: cache-ollama-volume
        uses: actions/cache@v4
        with:
          # Cache the Docker named volume content path
          # Docker typically stores volumes under /var/lib/docker/volumes on Linux
          # Cache this specific named volume's data directory
          path: /var/lib/docker/volumes/${{ env.OLLAMA_VOLUME_PATH }}/_data
          key: ollama-docker-volume-${{ runner.os }}-${{ hashFiles('**/lockfiles') }} # Example key
          restore-keys: |
            ollama-docker-volume-${{ runner.os }}-

      # Start Ollama using Docker (standard on Ubuntu)
      - name: Start Ollama using Docker
        run: |
          echo "Starting Ollama container using Docker..."
          # Use a named volume for persistence within the job & caching
          docker run -d --network=host \
            -v ${{ env.OLLAMA_VOLUME_PATH }}:/root/.ollama \
            -e OLLAMA_FLASH_ATTENTION=1 \
            --name ollama ollama/ollama

          echo "Waiting for Ollama service to initialize..."
          sleep 15 # Wait for the server

          echo "Checking running Docker containers..."
          docker ps
          # Optional: Check API endpoint
          curl --fail http://localhost:11434/ || (echo "Ollama server failed to start"; exit 1)

      # Pull model using Docker exec
      - name: Pull Ollama Model
        run: |
          echo "Attempting to pull model: ${{ env.OLLAMA_MODEL_TO_TEST }}"
          docker exec ollama ollama pull ${{ env.OLLAMA_MODEL_TO_TEST }}

          echo "Listing available models in Ollama..."
          docker exec ollama ollama list

      # Run Gradle tests
      - name: Run Gradle Tests
        run: |
          ./gradlew sample-android:testDebugUnitTest --tests "*OllamaWithOpenAiApiInterfaceTest"

      # Upload artifacts
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        if: always()
        with:
          name: reports
          path: |
            **/build/reports
            **/build/outputs/roborazzi
          retention-days: 30