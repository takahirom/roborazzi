plugins {
  id "org.jetbrains.kotlin.multiplatform"
  id "com.android.library"
  id("org.jetbrains.kotlin.plugin.serialization") version libs.versions.kotlin
}
if (System.getenv("INTEGRATION_TEST") != "true") {
  pluginManager.apply("com.vanniktech.maven.publish")
}

android.compileSdk(34)

kotlin {
  applyDefaultHierarchyTemplate()

  iosX64()
  iosArm64()
  iosSimulatorArm64()

  jvm()

  androidTarget {
    publishLibraryVariants("release")
  }

  sourceSets {
    commonMain {
      dependencies {
        implementation "io.github.takahirom.roborazzi:roborazzi-core:$VERSION_NAME"
        implementation(libs.kotlinx.coroutines.core)
        implementation(libs.ktor.serialization.json)
        implementation(libs.ktor.client.core)
        implementation(libs.ktor.client.cio)
        implementation(libs.ktor.client.logging)
        implementation(libs.ktor.client.contentnegotiation)
        implementation(libs.kotlinx.io.core)
        implementation(libs.kotlinx.serialization.json)
      }
    }
  }
  sourceSets.all {
    it.languageSettings {
      progressiveMode = true
      optIn("com.github.takahirom.roborazzi.InternalRoborazziApi")
      optIn("com.github.takahirom.roborazzi.ExperimentalRoborazziApi")
    }
  }
}

android {
  namespace 'com.github.takahirom.roborazzi.ai.openai'
  compileSdk 34

  defaultConfig {
    minSdk 21
    targetSdk 32

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }
  buildFeatures {}
  testOptions {
    unitTests {
      includeAndroidResources = true
    }
  }
}